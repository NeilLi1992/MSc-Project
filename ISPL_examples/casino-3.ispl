Agent Environment
    Obsvars:
        Casino_turn : boolean;
        Casino_coin_c : boolean;
        Player_coin_p : boolean;
    end Obsvars
    
    Actions = { none };

    Protocol:
        Other : { none };
    end Protocol 

    Evolution:
--        Casino_turn = Casino.turn and Casino_coin_c = Casino.coin_c and Player_coin_p = Player.coin_p if Action = none;
        Casino_turn = true and Casino_coin_c = false and Player_coin_p = true if Action = none;
    end Evolution
end Agent

Agent Casino
    Vars:
        turn: boolean;
        coin_c: boolean;
    end Vars

    Actions = {gc1, gc2, gc3};

    Protocol:
        turn = true : { gc1 };
        turn = true : { gc2 };
        !turn = true : { gc3 };
    end Protocol

    Evolution:
        coin_c = true and turn = false if Action = gc1;
        coin_c = false and turn = false if Action = gc2;
        turn = true if Action = gc3;
    end Evolution
end Agent

Agent Player
    Vars:
        coin_p: boolean;
    end Vars

    Actions = {gc1, gc2};

    Protocol:
        ! Environment.Casino_turn = true : { gc1 };
        ! Environment.Casino_turn = true : { gc2 };
    end Protocol

    Evolution:
        coin_p = true if Action = gc1;
        coin_p = false if Action = gc2;
    end Evolution
end Agent

Evaluation
    turn if Environment.Casino_turn = true;
    coin_c if Environment.Casino_coin_c = true;
    coin_p if Environment.Player_coin_p = true;  
end Evaluation

InitStates
    ((Casino.turn = true and Casino.coin_c = false and Environment.Casino_turn = true and Environment.Casino_coin_c = false) or
    (Casino.turn = true and Casino.coin_c = true and Environment.Casino_turn = true and Environment.Casino_coin_c = true)) and
    ((Player.coin_p = true and Environment.Player_coin_p = true) or
    (Player.coin_p = false and Environment.Player_coin_p = false));
end InitStates

Formulae
  <<stE>> (Environment,stE) (
  -- LTL SAT
  ( <<st1>> (Casino, st1) <<st2>> (Player, st2) ( G F coin_c ) ) or
  -- LTL SYN
  ( ( <<st1>> (Casino, st1) [[st2]] (Player, st2) ( ! (G F coin_c) ) ) and ( <<st2>> (Player, st2) [[st1]] (Casino, st1) ( ! (F G coin_c ) ) ) ) or 
  -- CTL* SYN
  ( ( <<st1>> (Casino, st1) ( [[st2]] (Player, st2) ( ! (G F coin_c) ) and <<st2>> (Player, st2) ( F G coin_c ) ) ) or ( <<st2>> (Player, st2) ( [[st1]] (Casino, st1) ( ! (F G coin_c) ) and <<st1>> (Casino, st1) ( G F coin_c ) ) ) )
  );
end Formulae
