Agent Environment
    Obsvars:
        Casino_turn : boolean;
        Casino_coin_c : boolean;
        Player_coin_p : boolean;
        const_true : boolean;
    end Obsvars
    Actions = { skip };
    Protocol:
        Other : { skip };
    end Protocol
    Evolution:
        (Casino_coin_c = true and Casino_turn = false and Player_coin_p = true) if Casino.Action = gc0 and Player.Action = gc0;
        (Casino_coin_c = true and Casino_turn = false and Player_coin_p = false) if Casino.Action = gc0 and Player.Action = gc1;
        (Casino_coin_c = false and Casino_turn = false and Player_coin_p = true) if Casino.Action = gc1 and Player.Action = gc0;
        (Casino_coin_c = false and Casino_turn = false and Player_coin_p = false) if Casino.Action = gc1 and Player.Action = gc1;
        (Casino_turn = true and Player_coin_p = true) if Casino.Action = gc2 and Player.Action = gc0;
        (Casino_turn = true and Player_coin_p = false) if Casino.Action = gc2 and Player.Action = gc1;
    end Evolution
end Agent

Agent Casino
    Vars:
        turn : boolean;
        coin_c : boolean;
    end Vars
    Actions = { gc0, gc1, gc2, skip };
    Protocol:
        turn = true : { gc0 };
        turn = true : { gc1 };
        !turn = true : { gc2 };
        Other : { skip };
    end Protocol
    Evolution:
        coin_c = true and turn = false if Action = gc0;
        coin_c = false and turn = false if Action = gc1;
        turn = true if Action = gc2;
    end Evolution
end Agent

Agent Player
    Vars:
        coin_p : boolean;
    end Vars
    Actions = { gc0, gc1, skip };
    Protocol:
        !Environment.Casino_turn = true : { gc0 };
        !Environment.Casino_turn = true : { gc1 };
        Other : { skip };
    end Protocol
    Evolution:
        coin_p = true if Action = gc0;
        coin_p = false if Action = gc1;
    end Evolution
end Agent

Evaluation
    turn if Casino.turn = true;
    coin_c if Casino.coin_c = true;
    coin_p if Player.coin_p = true;
    const_true if Environment.const_true = true;
end Evaluation

InitStates
    ((Casino.turn = true and Environment.Casino_turn = true and Casino.coin_c = false and Environment.Casino_coin_c = false) or
(Casino.turn = true and Environment.Casino_turn = true and Casino.coin_c = true and Environment.Casino_coin_c = true)) and ((Player.coin_p = true and Environment.Player_coin_p = true) or
(Player.coin_p = false and Environment.Player_coin_p = false)) and Environment.const_true = true;
end InitStates

Formulae
    <<ste>> (Environment, ste) (
        <<st0>> <<st1>> (Casino, st0) (Player, st1) (
            X (([[alt_st0]] (Casino, alt_st0) !(G F (!(!turn) or (!((!(coin_c) or (X coin_p)) and (!(X coin_p) or (coin_c))))))) or (G F (!(!turn) or (!((!(coin_c) or (X coin_p)) and (!(X coin_p) or (coin_c)))))))
            and
            X (([[alt_st1]] (Player, alt_st1) !(G F (!(!turn) or (((!(coin_c) or (X coin_p)) and (!(X coin_p) or (coin_c))))))) or (G F (!(!turn) or (((!(coin_c) or (X coin_p)) and (!(X coin_p) or (coin_c)))))))
        )
    );
end Formulae
